# dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: dashboard
    labels:
        app: dashboard
spec:
    replicas: 1
    selector:
        matchLabels:
            app: dashboard
    template:
        metadata:
            labels:
                app: dashboard
        spec:
            initContainers:
            # During this Pod's initialization, check that mongodb service is up and running before starting this pod
                - name: check-message-bus-ready
                  image: busybox:latest
                  command: ['sh', '-c', 'until nc -vz mongodb 27017; do echo "Waiting for mongodb service"; sleep 2; done;']
            containers:
                - name: dashboard
                  image: devopsxkeepcoding/martian-bank:dashboard-1.3.0
                  imagePullPolicy: Always
                  env:
                      - name: SERVICE_PROTOCOL
                        value: {{ .Values.SERVICE_PROTOCOL }}
                      - name: ACCOUNT_HOST
                        value: accounts
                      - name: LOAN_HOST
                        value: loan
                      - name: TRANSACTION_HOST
                        value: transactions
                      - name: CUSTOMER_AUTH_HOST
                        value: customer-auth
                      - name: ATM_LOCATOR_HOST
                        value: atm-locator
                      - name: DB_URL
                        valueFrom:
                          secretKeyRef:
                            name: mongodb-secret
                            key: DB_URL
                  envFrom:
                      - secretRef:
                          name: mongodb-secret
                  livenessProbe:
                    tcpSocket:
                      port: 5000
                    initialDelaySeconds: 10
                    periodSeconds: 20
                  readinessProbe:
                    tcpSocket:
                      port: 5000
                    initialDelaySeconds: 10
                    periodSeconds: 20
                  resources:
                    requests:
                      memory: {{ .Values.resources.requests.memory }}
                      cpu: {{ .Values.resources.requests.cpu }}
                    limits:
                      memory: {{ .Values.resources.limits.memory }}
                      cpu: {{ .Values.resources.limits.cpu }}
            nodeSelector:   
              {{- if .Values.nodeSelector.enabled }}
                role: {{ .Values.nodeSelector.role }}
              {{- end }}
---
apiVersion: v1
kind: Service
metadata:
    name: dashboard
    annotations:
    {{- if .Values.aws.enabled }}
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-internal: "false"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    {{- end}}
spec:
    type: LoadBalancer
    selector:
        app: dashboard
    ports:
        - protocol: TCP
          port: 5000
          targetPort: 5000
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dashboard-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dashboard
  minReplicas: {{ .Values.autoscaling.minReplicas }} # Minimum number of pods to maintain
  maxReplicas: {{ .Values.autoscaling.maxReplicas }} # Maximum number of pods to scale up to
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # Scale up if CPU usage reaches 50% on average
{{- end }}
