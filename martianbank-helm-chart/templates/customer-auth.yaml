# customer-auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: customer-auth
    labels:
        app: customer-auth
spec:    
    replicas: 1
    selector:
        matchLabels:
            app: customer-auth
    template:
        metadata:
            labels:
                app: customer-auth
        spec:
            initContainers:
            # During this Pod's initialization, check that mongodb service is up and running before starting this pod
                - name: check-message-bus-ready
                  image: busybox:latest
                  command: ['sh', '-c', 'until nc -vz mongodb 27017; do echo "Waiting for mongodb service"; sleep 2; done;']
            containers:
                - name: customer-auth
                  image: devopsxkeepcoding/martian-bank:customer-auth-1.3.0
                  imagePullPolicy: Always 
                  env:
                    {{- if not .Values.mongodb.enabled }}
                    - name: DATABASE_HOST
                      value: "root:example@mongodb"
                    {{- end }}
                    - name: NODE_ENV
                      value: production
                    - name: PORT 
                      value: "8000"
                    - name: DB_URL
                      valueFrom:
                        secretKeyRef:
                          name: mongodb-secret
                          key: DB_URL
                  envFrom:
                      - secretRef:
                          name: mongodb-secret
                  livenessProbe:
                    tcpSocket:
                      port: 8000
                    initialDelaySeconds: 10
                    periodSeconds: 20
                  readinessProbe:
                    tcpSocket:
                      port: 8000
                    initialDelaySeconds: 10
                    periodSeconds: 20
                  resources:
                    requests:
                      memory: {{ .Values.resources.requests.memory }}
                      cpu: {{ .Values.resources.requests.cpu }}
                    limits:
                      memory: {{ .Values.resources.limits.memory }}
                      cpu: {{ .Values.resources.limits.cpu }}
            nodeSelector:   
              {{- if .Values.nodeSelector.enabled }}
              role: {{ .Values.nodeSelector.role }}
              {{- end }}
---
apiVersion: v1
kind: Service
metadata:
    name: customer-auth
spec:
    selector:
        app: customer-auth
    ports:
        - protocol: TCP
          port: 8000
          targetPort: 8000
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: customer-auth-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: customer-auth
  minReplicas: {{ .Values.autoscaling.minReplicas }} # Minimum number of pods to maintain
  maxReplicas: {{ .Values.autoscaling.maxReplicas }} # Maximum number of pods to scale up to
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # Scale up if CPU usage reaches 50% on average
{{- end }}

