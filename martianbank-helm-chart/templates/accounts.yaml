# accounts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts
  labels:
    app: accounts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounts
  template:
    metadata:
      labels:
        app: accounts
    spec:
      initContainers:
        - name: check-message-bus-ready
          image: busybox:latest
          command: ['sh', '-c', 'until nc -vz $(DATABASE_HOST) 27017; do echo "Waiting for mongodb service"; sleep 2; done;']
          env:
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: martianbanktest-mongodb-secret
                  key: database-host
      containers:
        - name: accounts
          image: devopsxkeepcoding/martian-bank:accounts-1.3.0
          imagePullPolicy: Always
          env:
            - name: SERVICE_PROTOCOL
              value: {{.Values.SERVICE_PROTOCOL}}
            - name: DB_URL
              value: {{ .Values.mongodb.urlTemplate }}
            - name: MONGODB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: martianbanktest-mongodb-secret
                  key: mongodb-root-username
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: martianbanktest-mongodb-secret
                  key: mongodb-root-password
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: martianbanktest-mongodb-secret
                  key: database-host
          livenessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
      nodeSelector:   
        {{- if .Values.nodeSelector.enabled }}
          role: {{ .Values.nodeSelector.role }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: accounts
spec:
  selector:
    app: accounts
  ports:
    - protocol: TCP
      port: 50051
      targetPort: 50051
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: accounts-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: accounts
  minReplicas: {{ .Values.autoscaling.minReplicas }} # Minimum number of pods to maintain
  maxReplicas: {{ .Values.autoscaling.maxReplicas }} # Maximum number of pods to scale up to
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # Scale up if CPU usage reaches 50% on average
{{- end }}