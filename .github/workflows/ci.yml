name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/add-ci-configuration
  pull_request:
    branches:
      - main
      - develop

jobs:
  secrets_scan:
    name: Scan for exposed secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitGuardian CLI
        run: pip install ggshield

      - name: Run GitGuardian secret scan
        env: 
          GITGUARDIAN_API_KEY: ${{ secrets.CI_GUARDIAN_API }}  
        run: ggshield secret scan repo .  

  lint:
    timeout-minutes: 15
    name: Lint code
    runs-on: ubuntu-latest
    strategy:
        matrix:
            module: [accounts,atm-locator,customer-auth, dashboard,loan,protobufs, transactions,ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: npm ci --no-audit --no-fund

      - name: Run ESLint for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: npx eslint .

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  sonarqube:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Install SonarQube Scanner
        run: npm install -g sonarqube-scanner

      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=devopsx-keepcoding_martian-bank \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
