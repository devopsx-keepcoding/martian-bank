name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/add-ci-configuration
  pull_request:
    branches:
      - main
      - develop

jobs:
  secrets_scan:
    name: Scan for exposed secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitGuardian CLI
        run: pip install ggshield

      - name: Run GitGuardian secret scan
        env: 
          GITGUARDIAN_API_KEY: ${{ secrets.CI_GUARDIAN_API }}  
        run: ggshield secret scan repo .  

  lint:
    timeout-minutes: 15
    name: Lint code
    runs-on: ubuntu-latest
    strategy:
        matrix:
            module: [atm-locator,customer-auth,ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: npm ci --no-audit --no-fund

      - name: Run ESLint for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: npx eslint .

  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [customer-auth, ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js  
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        working-directory: ./${{ matrix.module }}
        run: npm ci
    
      - name: Run tests with coverage
        working-directory: ./${{ matrix.module }}
        run: |
          chmod +x ./node_modules/.bin/jest
          ./node_modules/.bin/jest --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.module }}-coverage-report
          path: ${{ matrix.module }}/coverage

  sonarqube:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download coverage report for customer-auth
        uses: actions/download-artifact@v3
        with:
          name: customer-auth-coverage-report
          path: ./customer-auth/coverage
  
      - name: Download coverage report for ui
        uses: actions/download-artifact@v3
        with:
            name: ui-coverage-report
            path: ./ui/coverage

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Install SonarQube Scanner
        run: npm install -g sonarqube-scanner

      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=devopsx-keepcoding_martian-bank \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.organization=devopsx-keepcoding \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}
          -Dsonar.javascript.lcov.reportPaths=customer-auth/coverage/lcov.info,ui/coverage/lcov.info \
          -Dsonar.exclusions=**/node_modules/**,**/__tests__/** \
          -Dsonar.coverage.exclusions=**/tests/**,**/__tests__/**,**/*.test.*,**/*.spec.*  